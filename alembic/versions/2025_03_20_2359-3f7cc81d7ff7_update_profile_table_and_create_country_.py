"""Update Profile table and create Country and Rank tables.

Revision ID: 3f7cc81d7ff7
Revises: 2f82f5383909
Create Date: 2025-03-20 23:59:33.964101

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3f7cc81d7ff7"
down_revision: Union[str, None] = "2f82f5383909"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "countries",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("code", sa.String(length=2), nullable=False),
        sa.Column("description", sa.String(length=300), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "ranks",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("acronym", sa.String(length=3), nullable=False),
        sa.Column("description", sa.String(length=300), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("acronym"),
        sa.UniqueConstraint("name"),
    )
    op.add_column(
        "profiles",
        sa.Column(
            "gender",
            postgresql.ENUM("Male", "Female", "Not Defined", name="gender_enum"),
            nullable=False,
        ),
    )
    op.add_column("profiles", sa.Column("country_id", sa.Integer(), nullable=False))
    op.add_column("profiles", sa.Column("rank_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        "fk_profiles_rank_id", "profiles", "ranks", ["rank_id"], ["id"]
    )
    op.create_foreign_key(
        "fk_profiles_country_id", "profiles", "countries", ["country_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_profiles_rank_id", "profiles", type_="foreignkey")
    op.drop_constraint("fk_profiles_country_id", "profiles", type_="foreignkey")
    op.drop_column("profiles", "rank_id")
    op.drop_column("profiles", "country_id")
    op.drop_column("profiles", "gender")
    op.drop_table("ranks")
    op.drop_table("countries")
    # ### end Alembic commands ###
