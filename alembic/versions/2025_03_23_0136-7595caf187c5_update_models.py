"""Update models.

Revision ID: 7595caf187c5
Revises: 3f7cc81d7ff7
Create Date: 2025-03-23 01:36:24.062857

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7595caf187c5"
down_revision: Union[str, None] = "3f7cc81d7ff7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "ranks", sa.Column("abbreviation", sa.String(length=3), nullable=False)
    )
    op.drop_constraint("ranks_acronym_key", "ranks", type_="unique")
    op.create_unique_constraint(None, "ranks", ["abbreviation"])
    op.drop_column("ranks", "acronym")
    op.drop_constraint("users_email_key", "users", type_="unique")
    op.drop_constraint("users_username_key", "users", type_="unique")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_unique_constraint("users_username_key", "users", ["username"])
    op.create_unique_constraint("users_email_key", "users", ["email"])
    op.add_column(
        "ranks",
        sa.Column("acronym", sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    )
    op.drop_constraint("ranks_acronym_key", "ranks", type_="unique")
    op.create_unique_constraint("ranks_acronym_key", "ranks", ["acronym"])
    op.drop_column("ranks", "abbreviation")
    # ### end Alembic commands ###
